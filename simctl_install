#!/bin/bash

install_guide_path="./install_guide"

#Comprobar si se ha descomprimido con anterioridad debian5.fs
check=`ls www/ | grep -x debian5.fs.tar.xz.partaa`
if [ -z "$check" ]; then
	echo "Joining the image file..."
	cat www/debian5.fs.tar.xz.parta* > www/debian5.fs.tar.xz && rm -f www/debian5.fs.tar.xz.parta* &> /dev/null
fi

check=`ls www/ | grep -x debian5.fs`
if [ -z "$check" ]; then
	echo "Uncompressing the image file..."
	cat www/debian5.fs.tar.xz.parta* > www/debian5.fs.tar.xz && rm -f www/debian5.fs.tar.xz.parta* &> /dev/null
	tar xJf www/debian5.fs.tar.xz debian5.fs && mv debian5.fs www/debian5.fs
fi
#Copiar perfil de Konsole si esta instalado
check=`ls /usr/bin | grep konsole`
if [ ! -z "$check" ]; then
	cp $install_guide_path/profiles/tcgi.profile ~/.local/share/konsole/
fi
#Construir la imagen tcgi
sudo docker build -t tcgi .
#Colocar el comando simctl en /usr/local/bin para poder ejecutarlo directamente desde el terminal y añadir permisos de ejecución
sudo cp simctl /usr/local/bin/simctl
sudo chmod +x /usr/local/bin/simctl
#Comprobar si hay un contenedor corriendo y borrarlo antes de correr el nuevo que se acaba de crear.
check=`sudo docker ps -a | grep simctl`
if [ ! -z "$check" ]; then
	sudo docker stop simctl_tcgi && sudo docker rm simctl_tcgi
fi
#Correr el contenedor en modo daemon. Para poder ejecutar comandos dentro de él, se deberá usar el comando:
#sudo simctl [options]
sudo docker run -d -it --device /dev/net/tun --name=simctl_tcgi --cap-add=NET_ADMIN --network=host --ipc=host tcgi /bin/bash
#Conseguir el comando simtoos-captat para poder inicializar diversos Wiresharks a la vez desde host.
sudo docker cp simctl_tcgi:/usr/local/bin/simtools-captap /usr/local/bin
sudo chmod +x /usr/local/bin/simtools-captap
sudo docker cp simctl_tcgi:/usr/local/share/doc/simtools/screenrc.user ~/.screenrc
